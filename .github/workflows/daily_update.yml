# .github/workflows/daily_update.yml
name: EPG Data Update

on:
  schedule:
    # Ежедневный запуск БЕЗ обновления иконок в 00:00 UTC
    - cron: '0 0 * * *'
    # Еженедельный запуск С обновлением иконок в 01:00 UTC каждое воскресенье
    - cron: '0 1 * * 0'

  workflow_dispatch:
    inputs:
      update_type:
        description: 'Тип обновления'
        required: true
        default: 'daily'
        type: choice
        options:
        - daily
        - full

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install requests lxml

      - name: Determine update mode
        id: mode
        run: |
          if [[ "${{ github.event_name }}" == "schedule" && "$(date -u +'%H:%M %w')" == "01:00 0" ]]; then
            echo "mode_flag=--full-update" >> $GITHUB_OUTPUT
            echo "commit_message=Auto-update (weekly, full): $(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.update_type }}" == "full" ]]; then
            echo "mode_flag=--full-update" >> $GITHUB_OUTPUT
            echo "commit_message=Manual full update: $(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          else
            echo "mode_flag=" >> $GITHUB_OUTPUT
            echo "commit_message=Auto-update (daily): $(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          fi

      - name: Run update script
        run: python fetch_and_commit.py ${{ steps.mode.outputs.mode_flag }}
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Проверяем изменения. Путь icons/ будет отслеживать все вложенные папки.
          if git diff --quiet --exit-code data/ icons/ README.md icons_map.json; then
            echo "No changes to commit."
            exit 0
          fi

          # Добавляем все изменения в отслеживаемые файлы и папки
          git add data/ icons/ README.md icons_map.json

          git commit -m "${{ steps.mode.outputs.commit_message }}"

          git push
